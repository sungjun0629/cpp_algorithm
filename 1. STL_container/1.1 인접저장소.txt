객체를 저장하는 가장 간단한 방법은 *하나의 큰 메모리 영역에 모두 함께 넣어두는 것이다.

- std::array
일반적인 C 스타일의 배열
실행 시간 비용이 없을 뿐만 아니라 사용하기도 편하고 안전하다. 
하지만 고정 크기를 갖는다. 

- std::vector
배열 형태의 저장소가 필요할 때!
다양한 크기로 작동하며, 힙 메모리를 이용해 객체를 저장한다.
앞뒤로 많은 객체를 한꺼번에 추가하거나 삭제하면 공간 확보를 위해 새로운 메모리 할당이 이뤄지고
*이는 곧 객체 이동에 큰 비용이 소요된다. -> std::deque는 균형을 유지하는 재미있는 방식을 제공한다.

- std::deque
크기가 고정된 인접 메모리 영역에 해당 객체를 저장하지만, 이 메모리 영역은 각각 따로 독립된 형태를 띠고 있다.
이러한 방식을 이용하면 매우 간단하고 빠르게 데크를 증가시킬 수 있는데, 기존 메모리 영역에 잇는 객체는 
그대로 두고 컨테이너의 앞이나 뒤에 새로운 영역을 할당하기 때문이다. 
* 데크는 양방향 입출력을 뜻한다. 


